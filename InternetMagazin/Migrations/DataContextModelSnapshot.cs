// <auto-generated />
using System;
using InternetMagazin.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InternetMagazin.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("InternetMagazin.Models.CartViewModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created_at");

                    b.Property<decimal>("Price");

                    b.Property<int>("ProductId");

                    b.Property<int?>("ProductsId");

                    b.Property<int>("Quantity");

                    b.Property<DateTime>("Updated_at");

                    b.Property<int>("UserId");

                    b.Property<int?>("UsersId");

                    b.HasKey("Id");

                    b.HasIndex("ProductsId");

                    b.HasIndex("UsersId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("InternetMagazin.Models.CategoryViewModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Image");

                    b.Property<int>("ParentId");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("InternetMagazin.Models.OrderViewModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created_at");

                    b.Property<string>("Delivery_type");

                    b.Property<DateTime>("Order_Date");

                    b.Property<string>("Order_Number");

                    b.Property<int>("Order_Status");

                    b.Property<decimal>("Order_Sum");

                    b.Property<string>("Payment_type");

                    b.Property<DateTime>("Updated_at");

                    b.Property<int>("UserId");

                    b.Property<int?>("UsersId");

                    b.HasKey("Id");

                    b.HasIndex("UsersId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("InternetMagazin.Models.Order_ItemViewModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created_at");

                    b.Property<int>("OrderId");

                    b.Property<int?>("OrdersId");

                    b.Property<decimal>("Price");

                    b.Property<int>("ProductId");

                    b.Property<int?>("ProductsId");

                    b.Property<int>("Quantity");

                    b.Property<DateTime>("Updated_at");

                    b.HasKey("Id");

                    b.HasIndex("OrdersId");

                    b.HasIndex("ProductsId");

                    b.ToTable("Order_Items");
                });

            modelBuilder.Entity("InternetMagazin.Models.ProductViewModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Articul");

                    b.Property<int>("CategoryId");

                    b.Property<string>("Description");

                    b.Property<string>("Image");

                    b.Property<int>("Is_new");

                    b.Property<int>("Is_sale");

                    b.Property<decimal>("Price");

                    b.Property<decimal>("Price_Discount");

                    b.Property<int>("Quontity");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("InternetMagazin.Models.Product_GaleryViewModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Image");

                    b.Property<int>("ProductId");

                    b.Property<int?>("ProductsId");

                    b.HasKey("Id");

                    b.HasIndex("ProductsId");

                    b.ToTable("Product_Galeries");
                });

            modelBuilder.Entity("InternetMagazin.Models.ReviewViewModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created_at");

                    b.Property<string>("Text");

                    b.Property<DateTime>("Updated_at");

                    b.Property<int>("UserId");

                    b.Property<int?>("UsersId");

                    b.HasKey("Id");

                    b.HasIndex("UsersId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("InternetMagazin.Models.RollViewModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Rolles");
                });

            modelBuilder.Entity("InternetMagazin.Models.SiteProperty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Prop_Key");

                    b.Property<string>("Prop_Value");

                    b.HasKey("Id");

                    b.ToTable("SiteProperties");
                });

            modelBuilder.Entity("InternetMagazin.Models.SlideShowViewModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created_at");

                    b.Property<DateTime>("Date_Add");

                    b.Property<DateTime>("Date_And");

                    b.Property<string>("Description");

                    b.Property<string>("Image");

                    b.Property<string>("Image_Mobile");

                    b.Property<int>("Is_Active");

                    b.Property<string>("Link");

                    b.Property<string>("Title");

                    b.Property<DateTime>("Updated_at");

                    b.HasKey("Id");

                    b.ToTable("SlideShows");
                });

            modelBuilder.Entity("InternetMagazin.Models.UserViewModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Addres");

                    b.Property<string>("City");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("MiddleName");

                    b.Property<string>("Password");

                    b.Property<string>("Phone");

                    b.Property<string>("Remember");

                    b.Property<int>("RollId");

                    b.Property<int?>("RollesId");

                    b.HasKey("Id");

                    b.HasIndex("RollesId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("InternetMagazin.Models.CartViewModel", b =>
                {
                    b.HasOne("InternetMagazin.Models.ProductViewModel", "Products")
                        .WithMany("Carts")
                        .HasForeignKey("ProductsId");

                    b.HasOne("InternetMagazin.Models.UserViewModel", "Users")
                        .WithMany("Carts")
                        .HasForeignKey("UsersId");
                });

            modelBuilder.Entity("InternetMagazin.Models.OrderViewModel", b =>
                {
                    b.HasOne("InternetMagazin.Models.UserViewModel", "Users")
                        .WithMany("Orders")
                        .HasForeignKey("UsersId");
                });

            modelBuilder.Entity("InternetMagazin.Models.Order_ItemViewModel", b =>
                {
                    b.HasOne("InternetMagazin.Models.OrderViewModel", "Orders")
                        .WithMany("Order_Items")
                        .HasForeignKey("OrdersId");

                    b.HasOne("InternetMagazin.Models.ProductViewModel", "Products")
                        .WithMany("Order_Items")
                        .HasForeignKey("ProductsId");
                });

            modelBuilder.Entity("InternetMagazin.Models.ProductViewModel", b =>
                {
                    b.HasOne("InternetMagazin.Models.CategoryViewModel", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("InternetMagazin.Models.Product_GaleryViewModel", b =>
                {
                    b.HasOne("InternetMagazin.Models.ProductViewModel", "Products")
                        .WithMany("Product_Galeries")
                        .HasForeignKey("ProductsId");
                });

            modelBuilder.Entity("InternetMagazin.Models.ReviewViewModel", b =>
                {
                    b.HasOne("InternetMagazin.Models.UserViewModel", "Users")
                        .WithMany("Reviews")
                        .HasForeignKey("UsersId");
                });

            modelBuilder.Entity("InternetMagazin.Models.UserViewModel", b =>
                {
                    b.HasOne("InternetMagazin.Models.RollViewModel", "Rolles")
                        .WithMany("Users")
                        .HasForeignKey("RollesId");
                });
#pragma warning restore 612, 618
        }
    }
}
